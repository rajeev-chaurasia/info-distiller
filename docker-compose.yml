version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: info_distiller_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: infodistiller
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d infodistiller"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: info_distiller_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  gateway:
    build: ./gateway
    container_name: info_distiller_gateway
    env_file:
      - ./gateway/.env
    ports:
      - "8082:8082"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  agent-service:
    build: ./agent-service
    container_name: info_distiller_agent_service
    env_file:
      - ./agent-service/.env
    ports:
      - "8000:8000"
    volumes:
      - ./secrets:/app/secrets
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/secrets/gcp-credentials.json
      - DB_HOST=db
      - DB_NAME=infodistiller
      - DB_USER=user
      - DB_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - RABBITMQ_PASS=password
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  frontend:
    build: ./frontend
    container_name: info_distiller_frontend
    ports:
      - "3000:3000"
    depends_on:
      - gateway

volumes:
  postgres_data: